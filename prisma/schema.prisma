datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Routine {
    id        String   @id @default(cuid())
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    tasks     Task[]

    @@index([userId])
}

model Task {
    id        String   @id @default(cuid())
    routine   Routine  @relation(fields: [routineId], references: [id], onDelete: Cascade)
    routineId String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    order     Int      // Optional, for task ordering
    completions TaskCompletion[]

    @@index([routineId])
}

model TaskCompletion {
    id        String           @id @default(cuid())
    task      Task             @relation(fields: [taskId], references: [id], onDelete: Cascade)
    taskId    String
    createdAt DateTime         @default(now())
    updatedAt DateTime         @updatedAt
    status    CompletionStatus

    @@index([taskId])
}

enum CompletionStatus {
    PENDING
    COMPLETED
    SKIPPED
}
